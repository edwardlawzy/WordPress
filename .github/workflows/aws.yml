
permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read 

name: Build and Publish image to a private aws registry
on:
  push:
    branches: ["master"]
#
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.ACCESSKEY_ID }}
          aws-secret-access-key: ${{ secrets.ACCESSKEY_PRIV }}
          aws-region: us-east-1


#      - name: Configure AWS creds
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          role-to-assume: ${{ secrets.ROLE_ARN }}
          #role-session-name: ${{ secrets. }}
#          aws-region: us-east-1

#      - name: Login to Amazon ECR
#        id: login-ecr
#        uses: aws-actions/amazon-ecr-login@v1

      - name: Build image
        run: |
          sudo mkdir /archived
          sudo tar -czvf "/archived/app_$(date +%Y-%m-%d).tar.gz" --exclude=/archived .

      - name: push image to Amazon S3
        run: |
          aws s3 cp /archived/app_$(date +%Y-%m-%d).tar.gz s3://${{secrets.BUCKET_NAME}}/
#         sudo mkdir -p /var/www/html/wordpress
#         sudo tar -xzvf "/archived/app_$(date +%Y-%m-%d).tar.gz" -C /var/www/html/wordpress
          

#      - name: Deploy with Rsync
#        uses: Burnett01/rsync-deployments@7.0.1 # Or another suitable rsync action
#        with:
#              switches: -av --exclude="/archived" --exclude='.*'
#              remote_user: ec2-user
#              remote_host: ${{vars.INSTANCE_IP}}
#              path: .
#              remote_path: /var/www/html/wordpress
#              remote_key: ${{ secrets.SSH_PEM }}


      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{vars.INSTANCE_IP}}
          username: ec2-user
          key: ${{ secrets.SSH_PEM }}
          script: |
            mkdir -p /home/ec2-user/archived/app
            aws s3 cp s3://${{secrets.BUCKET_NAME}}/app_$(date +%Y-%m-%d).tar.gz /home/ec2-user/archived/app.tar.gz
            tar -xzvf "/home/ec2-user/archived/app.tar.gz" -C /home/ec2-user/archived/app
            sudo rsync -av /home/ec2-user/archived/app /var/www/html/wordpress
            sudo rm -rf /home/ec2-user/archived
